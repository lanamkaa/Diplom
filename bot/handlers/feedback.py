from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CommandHandler, ConversationHandler, MessageHandler, filters, CallbackQueryHandler
from .common import cancel
from .states import FEEDBACK_RATING, FEEDBACK_COMMENT
from ..database.feedback.create_feedback import create_feedback
from ..database.users.update_last_active import update_last_active_at

async def handle_feedback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /feedback.
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ü–µ–Ω–∫—É –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º.
    """
    context.user_data['conversation_active'] = True

    telegram_id = update.effective_user.id
    update_last_active_at(telegram_id)

    keyboard = [
        [
            InlineKeyboardButton("1 ‚≠ê", callback_data="feedback_1"),
            InlineKeyboardButton("2 ‚≠ê", callback_data="feedback_2"),
            InlineKeyboardButton("3 ‚≠ê", callback_data="feedback_3"),
            InlineKeyboardButton("4 ‚≠ê", callback_data="feedback_4"),
            InlineKeyboardButton("5 ‚≠ê", callback_data="feedback_5"),
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "–ö–∞–∫ –≤–∞–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º?",
        reply_markup=reply_markup
    )

    return FEEDBACK_RATING

async def handle_feedback_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ü–µ–Ω–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤.
    """
    query = update.callback_query
    await query.answer()
    
    rating = int(query.data.split('_')[1])
    context.user_data['last_rating'] = rating
    
    telegram_id = query.from_user.id
    update_last_active_at(telegram_id)

    success = create_feedback(
        user_id=telegram_id,
        rating=rating,
        is_dialog_feedback=True
    )
    
    if success:
        await query.edit_message_text(
            f"–°–ø–∞—Å–∏–±–æ –∑–∞ {rating} ‚≠ê!\n\n"
            "–•–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ–ª–Ω—ã–π feedback?\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ –≤–∞—à –æ—Ç–∑—ã–≤ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"
        )
    else:
        await query.edit_message_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        )
        return ConversationHandler.END
    
    return FEEDBACK_COMMENT

async def handle_feedback_comment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏.
    """
    telegram_id = update.effective_user.id
    update_last_active_at(telegram_id)

    comment = update.message.text
    rating = context.user_data.get('last_rating', 0)

    success = create_feedback(
        user_id=telegram_id,
        rating=rating,
        comment=comment,
        is_dialog_feedback=True
    )
    
    if success:
        await update.message.reply_text(
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–∑—ã–≤! "
            "–í—ã –ø–æ–º–æ–≥–∞–µ—Ç–µ –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ üòä"
        )
    else:
        await update.message.reply_text(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        )
    
    return ConversationHandler.END

feedback_handler = ConversationHandler(
    entry_points=[CommandHandler("feedback", handle_feedback)],
    states={
        FEEDBACK_RATING: [
            CallbackQueryHandler(handle_feedback_callback, pattern="^feedback_"),
        ],
        FEEDBACK_COMMENT: [
            MessageHandler(filters.TEXT & ~filters.COMMAND, handle_feedback_comment),
        ],
    },
    fallbacks=[CommandHandler("cancel", cancel)],
)
