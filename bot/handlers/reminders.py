from ..database.users.get_inactive_users import get_inactive_users
from ..database.users.get_user import get_user_by_telegram_id
from ..database.users.update_reminder_sent import update_reminder_sent_at

async def send_reminders(context):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã –±–æ–ª–µ–µ 7 –¥–Ω–µ–π.
    """
    inactive_users = get_inactive_users(days=7)
    print(f"üì¢ –ù–∞–π–¥–µ–Ω–æ {len(inactive_users)} –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")

    for telegram_id in inactive_users:
        try:
            user = get_user_by_telegram_id(telegram_id)

            if not user:
                print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å telegram_id={telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.")
                continue

            # user = (user_id, username, first_name, created_at, last_active_at)
            first_name = user[2] or "–¥—Ä—É–≥"

            message = (
                f"üëã –ü—Ä–∏–≤–µ—Ç, {first_name}!\n"
                "–î–∞–≤–Ω–æ –Ω–µ –≤–∏–¥–µ–ª–∏—Å—å üòä\n\n"
                "–Ø –≤—Å—ë –µ—â—ë –∑–¥–µ—Å—å, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ:\n"
                "‚Äî –Ω–∞–π—Ç–∏ —Å–µ—Ä–≤–∏—Å\n"
                "‚Äî –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å\n"
                "‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Å—ã–ª–∫—É\n\n"
                "–ù–∞–ø–∏—à–∏ /help ‚Äî –∏ —è –Ω–∞–ø–æ–º–Ω—é, —á—Ç–æ —É–º–µ—é!"
            )

            await context.bot.send_message(chat_id=telegram_id, text=message)
            update_reminder_sent_at(telegram_id)

            print(f"‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {telegram_id}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {telegram_id}: {e}")
