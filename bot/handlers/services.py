from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler
from telegram.constants import ParseMode
from ..utils.scraping import get_links
from ..database.users.update_last_active import update_last_active_at
from ..database.users.create_user import create_user_if_not_exists

async def services(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /services.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –ù–ì–¢–£ –≤ –≤–∏–¥–µ –∫–Ω–æ–ø–æ–∫.
    """
    context.user_data.clear()

    telegram_id = update.effective_user.id
    username = update.effective_user.username
    first_name = update.effective_user.first_name
    update_last_active_at(telegram_id)

   # –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if not create_user_if_not_exists(telegram_id, username, first_name):
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å/—Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {telegram_id} –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")


    links = get_links()

    keyboard = [
        [InlineKeyboardButton(name, url=url)] for name, url in links
    ]

    await update.message.reply_text(
        text=(
            "üóÇÔ∏è <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã –ù–ì–¢–£</b>\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Å–µ—Ä–≤–∏—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n"
            "–î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É."
        ),
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode=ParseMode.HTML,
        disable_web_page_preview=True
    )

    return ConversationHandler.END
