from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler
from ..utils.util import *
from ..database.users.create_user import create_user_if_not_exists
from ..database.users.update_last_active import update_last_active_at

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    –°–æ–∑–¥–∞—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –µ—â—ë –Ω–µ—Ç) –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    context.user_data.clear()

    telegram_id = update.effective_user.id
    username = update.effective_user.username
    first_name = update.effective_user.first_name

    # –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if not create_user_if_not_exists(telegram_id, username, first_name):
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å/—Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {telegram_id} –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

    update_last_active_at(telegram_id)

    text = load_message("main")
    await send_photo(update, context, "–∫–∞—Ä—Ç–∏–Ω–∫–∞1")
    await send_html(update, context, text)

    await show_main_menu(update, context, {
        "start": "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üßë‚Äçüè´",
        "services": "–°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ üóÇÔ∏è",
        "ask": "–ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å ‚ùî",
        "help": "–ü–æ–º–æ—â—å ü§ì",
        "feedback": "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å ‚ùó",
        "check_link": "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–ø–∞–º",
        "profile": "–ü—Ä–æ—Ñ–∏–ª—å üìä"
    })
    
    return ConversationHandler.END
