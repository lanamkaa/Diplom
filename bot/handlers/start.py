from telegram import Update
from telegram.ext import ContextTypes
from ..utils.util import *
from ..database.users.create_user import create_user_if_not_exists

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    user = update.effective_user
    if not create_user_if_not_exists(user.id, user.username or user.first_name):
        print(f"Failed to check/create user {user.id} in database")
    print(user)
    text = load_message("main")

    await send_photo(update, context, "–∫–∞—Ä—Ç–∏–Ω–∫–∞1")
    await send_html(update, context, text)

    await show_main_menu(update, context, {
        "start": "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üßë‚Äçüè´",
        "services": "–°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ üóÇÔ∏è",
        "ask": "–ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å ‚ùî",
        "help": "–ü–æ–º–æ—â—å ü§ì",
        "feedback": "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å ‚ùó",
        "check_link": "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–ø–∞–º",
    })
