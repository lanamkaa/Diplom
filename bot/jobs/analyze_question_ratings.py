from datetime import datetime, timedelta
from bot.database.connect import get_db_connection
from telegram.ext import ContextTypes
import logging


ADMIN_IDS = [888737841, 344532317]

logger = logging.getLogger(__name__)

async def analyze_question_ratings(context: ContextTypes.DEFAULT_TYPE):
    """
    –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–æ–ø—Ä–æ—Å—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é, –≥—Ä—É–ø–ø–∏—Ä—É–µ—Ç –∏—Ö –ø–æ question_type
    –∏ –≤—ã—è–≤–ª—è–µ—Ç –≥—Ä—É–ø–ø—É —Å —Å–∞–º–æ–π –Ω–∏–∑–∫–æ–π answer_rating.
    """
    conn = get_db_connection()
    if not conn:
        logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤–æ–ø—Ä–æ—Å–æ–≤")
        return

    print("–ê–Ω–∞–ª–∏–∑ –≤–æ–ø—Ä–æ—Å–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é")

    cur = conn.cursor()
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –Ω–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥
        week_ago = datetime.now() - timedelta(days=7)
        
        # –ó–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ä–µ–¥–Ω–∏—Ö –æ—Ü–µ–Ω–æ–∫ –ø–æ —Ç–∏–ø–∞–º –≤–æ–ø—Ä–æ—Å–æ–≤
        cur.execute("""
            SELECT 
                question_type,
                COUNT(*) as question_count,
                AVG(answer_rating) as avg_rating
            FROM questions 
            WHERE answer_rating IS NOT NULL
            AND created_at >= %s
            GROUP BY question_type
            ORDER BY avg_rating ASC
        """, (week_ago,))
        
        results = cur.fetchall()
        print(results)
        if results:
            lowest_rated = results[0]  # –ü–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç - —Å –Ω–∞–∏–º–µ–Ω—å—à–µ–π –æ—Ü–µ–Ω–∫–æ–π
            message = (
                f"üìä –ê–Ω–∞–ª–∏–∑ –≤–æ–ø—Ä–æ—Å–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é:\n\n"
                f"–¢–∏–ø –≤–æ–ø—Ä–æ—Å–∞ —Å –Ω–∞–∏–º–µ–Ω—å—à–µ–π –æ—Ü–µ–Ω–∫–æ–π: {lowest_rated[0]}\n"
                f"–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: {lowest_rated[2]:.2f}\n"
                f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {lowest_rated[1]}\n\n"
                f"–í—Å–µ —Ç–∏–ø—ã –≤–æ–ø—Ä–æ—Å–æ–≤:\n"
            )
            
            for q_type, count, rating in results:
                message += f"- {q_type}: {rating:.2f} ({count} –≤–æ–ø—Ä–æ—Å–æ–≤)\n"
            print(message)
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
            for admin_id in ADMIN_IDS:
                try:
                    await context.bot.send_message(
                        chat_id=admin_id,
                        text=message
                    )
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}: {e}")
        else:
            logger.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –≤–æ–ø—Ä–æ—Å–∞—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –≤–æ–ø—Ä–æ—Å–æ–≤: {e}")
    finally:
        cur.close()
        conn.close()
